
Fatbin elf code:
================
arch = sm_20
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

64bit elf: type=2, abi=7, sm=20, toolkit=75, flags = 0x140514
Sections:
Index Offset   Size ES Align   Type   Flags Link     Info Name
    1     40     32  0  1    STRTAB       0    0        0 .shstrtab
    2     72     32  0  1    STRTAB       0    0        0 .strtab
    3     a8     18 18  8    SYMTAB       0    2        0 .symtab

.section .strtab

.section .shstrtab

.section .symtab
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)

	code for sm_20

Fatbin ptx code:
================
arch = sm_20
code version = [4,3]
producer = cuda
host = linux
compile_size = 64bit
compressed








.version 4.3
.target sm_20
.address_size 64



.visible .entry _Z5BSMADPiS_S_(
.param .u64 _Z5BSMADPiS_S__param_0,
.param .u64 _Z5BSMADPiS_S__param_1,
.param .u64 _Z5BSMADPiS_S__param_2
)
{
.local .align 4 .b8 __local_depot0[8];
.reg .b64 %SP;
.reg .b64 %SPL;
.reg .pred %p<2>;
.reg .b32 %r<33>;
.reg .b64 %rd<26>;


mov.u64 %rd25, __local_depot0;
cvta.local.u64 %SP, %rd25;
ld.param.u64 %rd4, [_Z5BSMADPiS_S__param_0];
ld.param.u64 %rd5, [_Z5BSMADPiS_S__param_1];
ld.param.u64 %rd6, [_Z5BSMADPiS_S__param_2];
cvta.to.global.u64 %rd1, %rd6;
add.u64 %rd7, %SP, 0;
cvta.to.local.u64 %rd2, %rd7;
add.u64 %rd8, %SP, 4;
cvta.to.local.u64 %rd3, %rd8;
mov.u32 %r10, %tid.x;
st.local.u32 [%rd2], %r10;
mov.u32 %r11, 0;
st.local.u32 [%rd3], %r11;

	/*

	
	CPTX_BEGIN

	ld.local.u32 %r12, [%rd2];
shl.b32 %r13, %r12, 2;
cvta.to.global.u64 %rd9, %rd4;
mul.wide.s32 %rd10, %r13, 4;
add.s64 %rd11, %rd9, %rd10;
ld.global.u32 %r4, [%rd11];
ld.local.u32 %r14, [%rd2];
shl.b32 %r15, %r14, 2;
add.s32 %r16, %r15, 1;
mul.wide.s32 %rd12, %r16, 4;
add.s64 %rd13, %rd9, %rd12;
ld.global.u32 %r5, [%rd13];
ld.local.u32 %r17, [%rd2];
shl.b32 %r18, %r17, 2;
add.s32 %r19, %r18, 2;
mul.wide.s32 %rd14, %r19, 4;
add.s64 %rd15, %rd9, %rd14;
ld.global.u32 %r6, [%rd15];
ld.local.u32 %r20, [%rd2];
shl.b32 %r21, %r20, 2;
add.s32 %r22, %r21, 3;
mul.wide.s32 %rd16, %r22, 4;
add.s64 %rd17, %rd9, %rd16;
ld.global.u32 %r7, [%rd17];
ld.local.u32 %r23, [%rd2];
cvta.to.global.u64 %rd18, %rd5;
mul.wide.s32 %rd19, %r23, 4;
add.s64 %rd20, %rd18, %rd19;
ld.global.u32 %r8, [%rd20];
ld.local.u32 %r24, [%rd2];
shr.s32 %r25, %r24, 31;
shr.u32 %r26, %r25, 30;
add.s32 %r27, %r24, %r26;
and.b32 %r28, %r27, -4;
sub.s32 %r29, %r24, %r28;
mul.wide.s32 %rd21, %r29, 4;
add.s64 %rd22, %rd1, %rd21;
ld.global.u32 %r9, [%rd22];
mov.u32 %r3, 4;

	bsmad.s32 %r1, %r3, %r3, %r4, %r5, %r6, %r7, %r8, %r9;

	st.local.u32 [%rd3], %r1;

	CPTX_END

	
	*/

	ld.local.u32 %r30, [%rd2];
setp.gt.s32	%p1, %r30, 3;
@%p1 bra BB0_2;

ld.local.u32 %r31, [%rd3];
ld.local.u32 %r32, [%rd2];
mul.wide.s32 %rd23, %r32, 4;
add.s64 %rd24, %rd1, %rd23;
st.global.u32 [%rd24], %r31;

BB0_2:
ret;
}



Fatbin elf code:
================
arch = sm_20
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit

64bit elf: type=2, abi=7, sm=20, toolkit=75, flags = 0x140514
Sections:
Index Offset   Size ES Align   Type   Flags Link     Info Name
    1     40     96  0  1    STRTAB       0    0        0 .shstrtab
    2     d6     ac  0  1    STRTAB       0    0        0 .strtab
    3    188     60 18  8    SYMTAB       0    2        2 .symtab
    4    1e8     24  0  4 CUDA_INFO       0    3        0 .nv.info
    5    20c     48  0  4 CUDA_INFO       0    3        7 .nv.info._Z5BSMADPiS_S_
    6    254     38  0  4  PROGBITS       2    0        7 .nv.constant0._Z5BSMADPiS_S_
    7    28c     98  0  4  PROGBITS       6    3  8000003 .text._Z5BSMADPiS_S_

.section .strtab

.section .shstrtab

.section .symtab
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)
   1               0               0        3        0      7     .text._Z5BSMADPiS_S_
   2               0               0        3        0      6     .nv.constant0._Z5BSMADPiS_S_
   3               0             152       12       10      7     _Z5BSMADPiS_S_


.nv.constant0._Z5BSMADPiS_S_
0x00000000  0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  


.nv.info
	<0x1>
	Attribute:	EIATTR_MAX_STACK_SIZE
	Format:	EIFMT_SVAL
	Value:	0x3 0x0 
	<0x2>
	Attribute:	EIATTR_MIN_STACK_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z5BSMADPiS_S_(0x3)	min stack size: 0x8
	<0x3>
	Attribute:	EIATTR_FRAME_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z5BSMADPiS_S_(0x3)	frame size: 0x8


.nv.info._Z5BSMADPiS_S_
	<0x1>
	Attribute:	EIATTR_PARAM_CBANK
	Format:	EIFMT_SVAL
	Value:	0x2 0x180020 
	<0x2>
	Attribute:	EIATTR_CBANK_PARAM_SIZE
	Format:	EIFMT_HVAL
	Value:	0x18
	<0x3>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x2	Offset  : 0x10	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x4>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x1	Offset  : 0x8	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x5>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x0	Offset  : 0x0	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x6>
	Attribute:	EIATTR_CRS_STACK_SIZE
	Format:	EIFMT_SVAL
	Value:	0xc 


.text._Z5BSMADPiS_S_
bar = 0	reg = 8	lmem=0	smem=0
0x00005de4  0x28004404  0x20105d03  0x4800c000  
0x84009c04  0x2c000000  0x10101c43  0x68004000  
0x10011c03  0x4800c000  0xfc00dc02  0x3803ffff  
0xfc411c02  0x3803ffff  0x00309c85  0xc8000000  
0x004fdc85  0xc8000000  0x00301c85  0xc0000000  
0x0c01dc23  0x1a0ec000  0xc00081e7  0x40000000  
0x0030a085  0xc0000000  0x1001e1e2  0x18000000  
0x00402085  0xc0000000  0xc021a0a3  0x200f8000  
0xd021e0e3  0x208e8000  0x00602085  0x94000000  
0x00001de7  0x80000000  

	code for sm_20
		Function : _Z5BSMADPiS_S_
	.headerflags    @"EF_CUDA_SM20 EF_CUDA_PTX_SM(EF_CUDA_SM20)"
        /*0000*/         MOV R1, c[0x1][0x100];                    /* 0x2800440400005de4 */
        /*0008*/         ISUB R1, R1, 0x8;                         /* 0x4800c00020105d03 */
        /*0010*/         S2R R2, SR_TID.X;                         /* 0x2c00000084009c04 */
        /*0018*/         LOP.OR R0, R1, c[0x0][0x4];               /* 0x6800400010101c43 */
        /*0020*/         IADD R4, R0, 0x4;                         /* 0x4800c00010011c03 */
        /*0028*/         LOP32I.AND R3, R0, 0xffffff;              /* 0x3803fffffc00dc02 */
        /*0030*/         LOP32I.AND R4, R4, 0xffffff;              /* 0x3803fffffc411c02 */
        /*0038*/         STL [R3], R2;                             /* 0xc800000000309c85 */
        /*0040*/         STL [R4], RZ;                             /* 0xc8000000004fdc85 */
        /*0048*/         LDL R0, [R3];                             /* 0xc000000000301c85 */
        /*0050*/         ISETP.GT.AND P0, PT, R0, 0x3, PT;         /* 0x1a0ec0000c01dc23 */
        /*0058*/     @P0 BRA.U 0x90;                               /* 0x40000000c00081e7 */
        /*0060*/    @!P0 LDL R2, [R3];                             /* 0xc00000000030a085 */
        /*0068*/    @!P0 MOV32I R7, 0x4;                           /* 0x180000001001e1e2 */
        /*0070*/    @!P0 LDL R0, [R4];                             /* 0xc000000000402085 */
        /*0078*/    @!P0 IMAD R6.CC, R2, R7, c[0x0][0x30];         /* 0x200f8000c021a0a3 */
        /*0080*/    @!P0 IMAD.HI.X R7, R2, R7, c[0x0][0x34];       /* 0x208e8000d021e0e3 */
        /*0088*/    @!P0 ST.E [R6], R0;                            /* 0x9400000000602085 */
        /*0090*/         EXIT;                                     /* 0x8000000000001de7 */
		...............................


